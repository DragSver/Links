version: '3.4'

networks:
  api-dev:
    driver: bridge 
    
volumes:
  db_volume:
  rabbit_data:

services:
  app1:
    image: api:latest
    container_name: app1
    hostname: app1
    expose: 
      - "5020"
    build:
      context: Links.API
      dockerfile: Dockerfile
    depends_on:
      - db
      - rabbitmq
    restart: always
    environment: 
      - ConnectionString=host=db;port=5432;database=linkdb;username=linkuser;password=linkpassword
      - RPC__Rabbit__Host=rabbitmq
      - RPC__Rabbit__Port=5672
      - RPC__Rabbit__UserName=rmquser
      - RPC__Rabbit__UserPass=rabbitpass
      - RPC__Rabbit__Retriescount=5
      - RPC__Rabbit__ResponseTimeout=3000
      - RPC__LinksQueue=links
    networks:
      - api-dev

  app2:
    image: api:latest
    container_name: app2
    hostname: app2
    expose: 
      - "5020"
    build:
      context: Links.API
      dockerfile: Dockerfile
    depends_on:
      - db
      - rabbitmq
    restart: always
    environment: 
      - ConnectionString=host=db;port=5432;database=linkdb;username=linkuser;password=linkpassword
      - RPC__Rabbit__Host=rabbitmq
      - RPC__Rabbit__Port=5672
      - RPC__Rabbit__UserName=rmquser
      - RPC__Rabbit__UserPass=rabbitpass
      - RPC__Rabbit__Retriescount=5
      - RPC__Rabbit__ResponseTimeout=3000
      - RPC__LinksQueue=links
    networks:
      - api-dev

  urls_processor:
    container_name: urls_processor
    build:
      context: Links.UrlProcessor
      dockerfile: Dockerfile
    networks:
      - api-dev
    restart: always
    environment:
      - RpcServer__Host=rabbitmq
      - RpcServer__Port=5672
      - RpcServer__UserName=rmquser
      - RpcServer__UserPass=rabbitpass
      - RpcServer__QueueName=links
      - RpcServer__Retriescount=5
      - RpcServer__ResponseTimeout=3000
    depends_on:
      - rabbitmq
      - db

  db:
    image: postgres:latest
    ports:
     - 5430:5432
    restart: always
    volumes:
     - ./pg_init.sh:/docker-entrypoint-initdb.d/db.sh
     - db_volume:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=linkuser
      - POSTGRES_PASSWORD=linkpassword
      - SQL_DATABASE=linkdb
    networks:
      - api-dev
  
  rabbitmq:
    image: rabbitmq:3.7.3-management
    container_name: rabbitmq
    networks:
      - api-dev
    environment:
      - RABBITMQ_USERNAME=rmquser
      - RABBITMQ_PASSWORD=rabbitpass
    restart: always
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - rabbit_data:/var/lib/rabbitmq

  nginx:
    image: nginx
    depends_on:
      - app1
      - app2
    ports:
      - 4000:4000
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    networks:
      - api-dev  
